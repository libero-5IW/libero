version: "3.8"

services:
  traefik:
    image: traefik:v3.0
    command:
      - --providers.swarm=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.le.acme.httpchallenge=true
      - --certificatesresolvers.le.acme.httpchallenge.entrypoint=web
      - --certificatesresolvers.le.acme.email=rachaafaf15@email.com
      - --certificatesresolvers.le.acme.storage=/letsencrypt/acme.json
      - --api.dashboard=true
      - --log.level=INFO
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - traefik_letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - libero-net
    deploy:
      placement:
        constraints:
          - node.role == manager
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.traefik.rule=Host(`traefik.liberogestion.fr`)"
        - "traefik.http.routers.traefik.entrypoints=websecure"
        - "traefik.http.routers.traefik.tls.certresolver=le"
        - "traefik.http.services.traefik.loadbalancer.server.port=8080"

  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: libero
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - libero-net
    deploy:
      placement:
        constraints:
          - node.role == worker
      labels:
        - "traefik.enable=false"

  backend:
    image: projetlibero/libero-backend:latest
    env_file:
      - .env
    environment:
      DATABASE_URL: postgres://admin:admin@postgres:5432/libero
      DOCUSIGN_PRIVATE_KEY_FILE: /run/secrets/docusign_private_key
    secrets:
      - docusign_private_key
    depends_on:
      - postgres
    networks:
      - libero-net
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.backend.rule=Host(`api.liberogestion.fr`)"
        - "traefik.http.routers.backend.entrypoints=websecure"
        - "traefik.http.routers.backend.tls.certresolver=le"
        - "traefik.http.services.backend.loadbalancer.server.port=3000"

  frontend:
    image: projetlibero/libero-frontend:latest
    depends_on:
      - backend
    networks:
      - libero-net
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.frontend.rule=Host(`liberogestion.fr`) || Host(`www.liberogestion.fr`)"
        - "traefik.http.routers.frontend.entrypoints=websecure"
        - "traefik.http.routers.frontend.tls.certresolver=le"
        - "traefik.http.services.frontend.loadbalancer.server.port=5173"

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - libero-net
    deploy:
      replicas: 1
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.prometheus.rule=Host(`prometheus.liberogestion.fr`)"
        - "traefik.http.routers.prometheus.entrypoints=websecure"
        - "traefik.http.routers.prometheus.tls.certresolver=le"
        - "traefik.http.services.prometheus.loadbalancer.server.port=9090"

  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_SECURITY_ADMIN_USER_FILE=/run/secrets/grafana_admin_user
      - GF_SECURITY_ADMIN_PASSWORD_FILE=/run/secrets/grafana_admin_password
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - libero-net
    deploy:
      replicas: 1
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.grafana.rule=Host(`grafana.liberogestion.fr`)"
        - "traefik.http.routers.grafana.entrypoints=websecure"
        - "traefik.http.routers.grafana.tls.certresolver=le"
        - "traefik.http.services.grafana.loadbalancer.server.port=3000"
    secrets:
      - grafana_admin_user
      - grafana_admin_password

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - libero-net
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      labels:
        - "traefik.enable=false"

  node-exporter:
    image: prom/node-exporter:latest
    networks:
      - libero-net
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      labels:
        - "traefik.enable=false"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - network.host=0.0.0.0
    volumes:
      - es_data:/usr/share/elasticsearch/data
    networks:
      - libero-net
    deploy:
      placement:
        constraints:
          - node.role == manager

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.4
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
      - libero-net
    depends_on:
      - elasticsearch
    deploy:
      replicas: 1
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.kibana.rule=Host(`kibana.liberogestion.fr`)"
        - "traefik.http.routers.kibana.entrypoints=websecure"
        - "traefik.http.routers.kibana.tls.certresolver=le"
        - "traefik.http.services.kibana.loadbalancer.server.port=5601"

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.13.4
    user: root
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
    networks:
      - libero-net
    depends_on:
      - elasticsearch
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager

volumes:
  postgres_data:
  traefik_letsencrypt:
  grafana_data:
  prometheus_data:
  es_data:

secrets:
  docusign_private_key:
    external: true
  grafana_admin_user:
    external: true
  grafana_admin_password:
    external: true

networks:
  libero-net:
    external: true